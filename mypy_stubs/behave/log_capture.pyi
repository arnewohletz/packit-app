from logging.handlers import BufferingHandler
from typing import Any, Optional

class RecordFilter:
    include: Any = ...
    exclude: Any = ...
    def __init__(self, names: Any) -> None: ...
    def filter(self, record: Any): ...

class LoggingCapture(BufferingHandler):
    config: Any = ...
    old_handlers: Any = ...
    old_level: Any = ...
    level: Any = ...
    def __init__(self, config: Any, level: Optional[Any] = ...) -> None: ...
    def __bool__(self): ...
    def flush(self) -> None: ...
    buffer: Any = ...
    def truncate(self) -> None: ...
    def getvalue(self): ...
    def find_event(self, pattern: Any): ...
    def any_errors(self): ...
    def inveigle(self) -> None: ...
    def abandon(self) -> None: ...
MemoryHandler = LoggingCapture

def capture(*args: Any, **kw: Any): ...
