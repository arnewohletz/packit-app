from behave.formatter.base import Formatter as Formatter, StreamOpener as StreamOpener
from behave.importer import LazyDict as LazyDict, LazyObject as LazyObject, load_module as load_module, parse_scoped_name as parse_scoped_name
from typing import Any

def format_iter(): ...
def format_items(resolved: bool = ...): ...
def register_as(name: Any, formatter_class: Any) -> None: ...
def register(formatter_class: Any) -> None: ...
def register_formats(formats: Any) -> None: ...
def load_formatter_class(scoped_class_name: Any): ...
def select_formatter_class(formatter_name: Any): ...
def is_formatter_valid(formatter_name: Any): ...
def make_formatters(config: Any, stream_openers: Any): ...
